--- pbr-1.1.7-17.bash	2024-09-30 14:36:04.255433000 +0200
+++ pbr-1.1.7-17-egc-3.bash	2024-09-30 18:26:17.095710000 +0200
@@ -5,6 +5,11 @@
 # sysctl net.ipv4.conf.default.rp_filter=1
 # sysctl net.ipv4.conf.all.rp_filter=1
 
+# Rename /usr/share/nftables.d/chain-post/dstnat_lan to /usr/share/nftables.d/chain-post/dstnat
+# In the newly created directory edit this file: /usr/share/nftables.d/chain-post/dstnat/pbr-30.nft replace line " jump pbr_dstnat_lan comment "Jump into pbr dstnat_lan chain"; " with: " jump pbr_dstnat comment "Jump into pbr dstnat chain"; "
+# In /usr/share/nftables.d/table-post/30-pbr.nft replace "chain pbr_dstnat_lan {}" with: "chain pbr_dstnat {}"
+
+
 # shellcheck disable=SC2034
 START=94
 # shellcheck disable=SC2034
@@ -13,7 +18,7 @@
 [ -n "${IPKG_INSTROOT}" ] && return 0
 
 readonly packageName='pbr'
-readonly PKG_VERSION='1.1.7-17'
+readonly PKG_VERSION='1.1.7-17-egc-3'
 readonly packageCompat='8'
 readonly serviceName="$packageName $PKG_VERSION"
 readonly packageConfigFile="/etc/config/${packageName}"
@@ -306,7 +311,9 @@
 uci_get_protocol() { uci_get 'network' "$1" 'proto'; }
 is_default_dev() { [ "$1" = "$(ip -4 r | grep -m1 'dev' | grep -Eso 'dev [^ ]*' | awk '{print $2}')" ]; }
 is_disabled_interface() { [ "$(uci_get 'network' "$1" 'disabled')" = '1' ]; }
-is_domain() { ! is_ipv6 "$1" && str_contains "$1" '[a-zA-Z]'; }
+#egc
+#is_domain() { ! is_ipv6 "$1" && str_contains "$1" '[a-zA-Z]'; }
+is_domain() { ! is_ipv6 "$1" && ! is_mac_address "$1" && ! is_phys_dev "$1" && str_contains "$1" '[a-zA-Z]'; }
 is_dslite() { local p; network_get_protocol p "$1"; [ "${p:0:6}" = "dslite" ]; }
 is_family_mismatch() { ( is_ipv4_netmask "${1//!}" && is_ipv6 "${2//!}" ) || ( is_ipv6 "${1//!}" && is_ipv4_netmask "${2//!}" ); }
 is_greater() { test "$(printf '%s\n' "$@" | sort -V | head -n 1)" != "$1"; }
@@ -633,8 +640,8 @@
 			return 1
 		fi
 		if is_config_enabled 'dns_policy'; then
-			if ! nft_call list chain inet fw4 dstnat_lan; then
-				state add 'errorSummary' 'errorDefaultFw4ChainMissing' 'dstnat_lan'
+			if ! nft_call list chain inet fw4 dstnat; then
+				state add 'errorSummary' 'errorDefaultFw4ChainMissing' 'dstnat'
 				return 1
 			fi
 		fi
@@ -912,7 +919,7 @@
 
 cleanup_main_chains() {
 	local i j
-	for i in $chainsList dstnat_lan; do
+	for i in $chainsList dstnat; do
 		i="$(str_to_lower "$i")"
 		nft_call flush chain inet "$nftTable" "${nftPrefix}_${i}"
 	done
@@ -1174,7 +1181,7 @@
 	local negation value dest4 dest6 first_value
 	local inline_set_ipv4_empty_flag inline_set_ipv6_empty_flag
 	local name="$1" src_addr="$2" dest_dns="$3" uid="$4"
-	local chain='dstnat_lan' iface='dns'
+	local chain='dstnat' iface='dns'
 
 	if [ -z "${dest_dns_ipv4}${dest_dns_ipv6}" ]; then
 		processPolicyError='true'
@@ -1239,8 +1246,11 @@
 			fi
 		fi
 
-		param4="$nftInsertOption rule inet ${nftTable} ${nftPrefix}_${chain} ${param4} ${proto_i} ${nft_rule_params} ${dest4} comment \"$name\""
-		param6="$nftInsertOption rule inet ${nftTable} ${nftPrefix}_${chain} ${param6} ${proto_i} ${nft_rule_params} ${dest6} comment \"$name\""
+		#egc
+		#param4="$nftInsertOption rule inet ${nftTable} ${nftPrefix}_${chain} ${param4} ${proto_i} ${nft_rule_params} ${dest4} comment \"$name\""
+		#param6="$nftInsertOption rule inet ${nftTable} ${nftPrefix}_${chain} ${param6} ${proto_i} ${nft_rule_params} ${dest6} comment \"$name\""
+		param4="$nftInsertOption rule inet ${nftTable} ${nftPrefix}_${chain} ${param4} meta nfproto ipv4 ${proto_i} ${nft_rule_params} ${dest4} comment \"$name\""
+		param6="$nftInsertOption rule inet ${nftTable} ${nftPrefix}_${chain} ${param6} meta nfproto ipv6 ${proto_i} ${nft_rule_params} ${dest6} comment \"$name\""
 
 		local ipv4_error='0' ipv6_error='0'
 		if [ "$policy_routing_nft_prev_param4" != "$param4" ] && \
@@ -2326,7 +2336,7 @@
 	fi
 	echo "$_SEPARATOR_"
 	echo "$packageName chains - policies"
-	for i in $chainsList dstnat_lan; do
+	for i in $chainsList dstnat; do
 		"$nft" -a list table inet "$nftTable" | sed -n "/chain ${nftPrefix}_${i} {/,/\t}/p"
 	done
 	echo "$_SEPARATOR_"
